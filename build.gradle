project.ext.springBootVersion = "1.4.0.RELEASE"

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        /*
         * For some reason, I cannot define a variable common between
         * buildscript and the project, so keep this version in sync with
         * project.ext.springBootVersion above.
         */
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE")
    }
}

allprojects {

    repositories {
        mavenCentral()
    }

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    group = 'org.hmhb'
    version = '1.0-SNAPSHOT'

}

apply plugin: 'spring-boot'

springBoot {
    /* This adds the build info into the /info actuator. */
    buildInfo()
}

jar {
    baseName = 'hmhb-server'

    manifest {
        attributes(
                "Implementation-Title": baseName,
                "Implementation-Version": version
        )
    }
}

dependencies {

    compile project(':client')

    /* brings in what spring-boot needs for a webapp (we'll be running tomcat) */
    compile("org.springframework.boot:spring-boot-starter-web:${project.springBootVersion}")

    /* brings in the spring-boot "actuators" -- production ready servlets offering metrics, etc. */
    compile("org.springframework.boot:spring-boot-starter-actuator:${project.springBootVersion}")

    /* allows us to have the /docs that explains spring-boots' actuators */
    compile("org.springframework.boot:spring-boot-actuator-docs:${project.springBootVersion}")

    /* allows us to use templates instead of only static html */
    compile("org.springframework.boot:spring-boot-starter-thymeleaf:${project.springBootVersion}");

    /* brings in most of what's needed for JPA in spring-boot */
    compile("org.springframework.boot:spring-boot-starter-data-jpa:${project.springBootVersion}")
    compile("org.postgresql:postgresql:9.4-1201-jdbc4")

    /* needed for hibernate second level caching */
    compile("org.hibernate:hibernate-ehcache:5.0.9.Final")

    /* needed for hibernate-validator, which depends on javax.el-api */
    compile("org.glassfish:javax.el:3.0.0")

    /* slf4j logging */
    compile("org.slf4j:slf4j-api:1.7.21")

    /* for the simple reflection based equals/hashCode/toString methods */
    compile("org.apache.commons:commons-lang3:3.4")

    /* adds metrics and spring interceptor so we can use @Timed */
    compile("io.dropwizard.metrics:metrics-core:3.1.2")
    compile("com.ryantenney.metrics:metrics-spring:3.1.3")

    /* adds in google's findbugs jar so @Nonnull and @Nullable can be used */
    compile("com.google.code.findbugs:jsr305:3.0.1")

    /* client library to use google maps for geocoding */
    compile("com.google.maps:google-maps-services:0.1.16")

    /* using Moxy for jaxb so we can have CDATA in our xml */
    compile("org.eclipse.persistence:org.eclipse.persistence.moxy:2.6.4")

    /* libraries to call into google for user information */
    compile("com.google.api-client:google-api-client:1.23.0")

    /* libraries for jwt token generation and verification */
    compile("io.jsonwebtoken:jjwt:0.7.0")

    testCompile("junit:junit:4.12")
    testCompile("org.hamcrest:hamcrest-core:1.3")
    testCompile("org.mockito:mockito-all:1.10.19")
    testCompile("org.springframework.boot:spring-boot-starter-test:${project.springBootVersion}")

}
